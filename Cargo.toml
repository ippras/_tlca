[package]
name = "tlca"
version = "0.3.0"
authors = ["Giorgi Vladimirovich Kazakov", "Roman Alexandrovich Sidorov"]
edition = "2024"

[dependencies]
anyhow = "1.0.100"
eframe = { version = "0.32.3", features = [
    "accesskit",
    "default_fonts",
    "glow",
    "persistence",
    "wayland",
] }
egui = "0.32.3"
egui-phosphor = "0.10.0"
egui_commonmark = { version = "0.21.1", features = ["macros", "svg"] }
egui_dnd = "0.13.0"
egui_extras = { version = "0.32.3", features = ["datepicker", "serde"] }
egui_table = "0.4.0"
egui_tiles = "0.13.0"
egui_tiles_ext = { git = "https://github.com/kgv/egui_tiles_ext" }
itertools = "0.14.0"
log = "0.4.28"
parking_lot = "0.12.4"
polars = { version = "0.51.0", default-features = false, features = [
    "array_arithmetic",
    "bitwise",
    "concat_str",
    "cov",
    "cum_agg",
    "dtype-array",
    "dtype-i8",
    "dtype-struct",
    "dtype-u8",
    "fmt_no_tty",
    "lazy",
    "meta",
    "parquet",
    "propagate_nans",
    "rank",
    "round_series",
    "row_hash",
    "strings",
    # "dtype-categorical",
    # "ipc",
] }
polars-utils = { version = "0.51.0", features = ["nightly"] }
semver = { version = "1.0.27", features = ["serde"] }
serde = { version = "1.0.226", features = ["derive", "std"] }
tracing = "0.1.41"
unic-langid = { version = "0.9.6", features = ["macros"] }

egui_ext = { git = "https://github.com/kgv/egui_ext", features = ["markdown"] }
lipid = { git = "https://github.com/ippras/lipid" }
metadata = { git = "https://github.com/ippras/metadata", branch = "map", features = [
    "egui",
] }
polars_ext = { git = "https://github.com/kgv/polars_ext" }

# egui_l20n = { git = "https://github.com/kgv/egui_l20n", features = ["macros"] }
# metadata = { path = "D:\\git\\ippras\\metadata", features = ["egui"] }
# re_ui = "0.22.1"

# native:
[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
poll-promise = { version = "0.3.0", features = ["tokio"] }
tokio = { version = "1.47.1", features = ["full"] }
tracing-subscriber = { version = "0.3.20", features = ["env-filter"] }

# web
[target.'cfg(target_arch = "wasm32")'.dependencies]
console_error_panic_hook = "0.1.7"
getrandom = { version = "0.3.3", default-features = false, features = [
    "wasm_js",
] }
poll-promise = { version = "0.3.0", features = ["web"] }
tracing-wasm = "0.2.1"
wasm-bindgen-futures = "0.4.52"
web-sys = "0.3.79"
# js-sys = "0.3.77"
# wasm-bindgen = "0.2.100"
# tokio = { version = "1.44.2", features = ["macros", "rt", "sync", "time"] }
# tokio_with_wasm = { version = "0.8.2", features = [
#     "macros",
#     "rt",
#     "sync",
#     "time",
# ] }

[profile.release]
opt-level = 2 # fast and small wasm

# Optimize all dependencies even in debug builds:
[profile.dev.package."*"]
opt-level = 2
